0a1,5
> type Ponto = {
>   x: number;
>   y: number;
> };
> 
11,19c17,28
< let eq: number = a == b;
< let ne: number = a != b;
< let lt: number = a < b;
< let le: number = a <= b;
< let gt: number = a > b;
< let ge: number = a >= b;
< let e: number = a && b;
< let ou: number = a || b;
< let nao: number = !a;
---
> 
>   let eq: boolean = a == b;
>   let ne: boolean = a != b;
>   let lt: boolean = a < b;
>   let le: boolean = a <= b;
>   let gt: boolean = a > b;
>   let ge: boolean = a >= b;
> 
>   let e: boolean = a && b;
>   let ou: boolean = a || b;
>   let nao: boolean = !a;
> 
22,39d30
< let p: Ponto = { x: 0, y: 0 };
< b--;
< p.x = soma;
< p.y = sub;
< let v: number = 4;
< p.y = sub;
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< return v[2];
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< // [Tipo de nó não implementado: 3]
< }
40a32,38
>   let p: Ponto = { x: soma, y: sub };
> 
>   let v: number[] = [0, 0, 0, 0];
>   v[0] = p.x;
>   v[1] = p.y;
>   v[2] = v[0] + v[1];
>   v[3] = (a != ++b || !(--v[2] < b)) as unknown as number;
41a40,41
>   return v[2];
> }
